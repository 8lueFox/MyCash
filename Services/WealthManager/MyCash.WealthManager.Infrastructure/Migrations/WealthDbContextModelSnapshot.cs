// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyCash.WealthManager.Infrastructure.DAL;

#nullable disable

namespace MyCash.WealthManager.Infrastructure.Migrations
{
    [DbContext(typeof(WealthDbContext))]
    partial class WealthDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyCash.WealthManager.Core.Entities.Balance", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FamilyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId")
                        .IsUnique();

                    b.ToTable("Balances");
                });

            modelBuilder.Entity("MyCash.WealthManager.Core.Entities.BalanceEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BalanceEventType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("BalanceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BalanceId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("EventDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BalanceId");

                    b.HasIndex("BalanceId1");

                    b.ToTable("BalanceEvents");
                });

            modelBuilder.Entity("MyCash.WealthManager.Core.Entities.Expense", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FamilyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FamilyId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("OperationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("Period")
                        .HasColumnType("int");

                    b.Property<string>("TransferType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.HasIndex("FamilyId1");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("MyCash.WealthManager.Core.Entities.Family", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BalanceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FamilyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("MyCash.WealthManager.Core.Entities.Income", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FamilyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FamilyId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("OperationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("Period")
                        .HasColumnType("int");

                    b.Property<string>("TransferType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.HasIndex("FamilyId1");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("MyCash.WealthManager.Core.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FamilyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserPackage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MyCash.WealthManager.Core.Entities.Balance", b =>
                {
                    b.HasOne("MyCash.WealthManager.Core.Entities.Family", "Family")
                        .WithOne("Balance")
                        .HasForeignKey("MyCash.WealthManager.Core.Entities.Balance", "FamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("MyCash.WealthManager.Core.ValueObjects.Value", "Value", b1 =>
                        {
                            b1.Property<Guid>("BalanceId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Count")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)");

                            b1.HasKey("BalanceId");

                            b1.ToTable("Balances");

                            b1.WithOwner()
                                .HasForeignKey("BalanceId");
                        });

                    b.Navigation("Family");

                    b.Navigation("Value")
                        .IsRequired();
                });

            modelBuilder.Entity("MyCash.WealthManager.Core.Entities.BalanceEvent", b =>
                {
                    b.HasOne("MyCash.WealthManager.Core.Entities.Balance", null)
                        .WithMany()
                        .HasForeignKey("BalanceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MyCash.WealthManager.Core.Entities.Balance", "Balance")
                        .WithMany("Events")
                        .HasForeignKey("BalanceId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("MyCash.WealthManager.Core.ValueObjects.Value", "Value", b1 =>
                        {
                            b1.Property<Guid>("BalanceEventId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Count")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)");

                            b1.HasKey("BalanceEventId");

                            b1.ToTable("BalanceEvents");

                            b1.WithOwner()
                                .HasForeignKey("BalanceEventId");
                        });

                    b.Navigation("Balance");

                    b.Navigation("Value")
                        .IsRequired();
                });

            modelBuilder.Entity("MyCash.WealthManager.Core.Entities.Expense", b =>
                {
                    b.HasOne("MyCash.WealthManager.Core.Entities.Family", null)
                        .WithMany()
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyCash.WealthManager.Core.Entities.Family", null)
                        .WithMany("Expenses")
                        .HasForeignKey("FamilyId1");

                    b.OwnsOne("MyCash.WealthManager.Core.ValueObjects.Value", "Value", b1 =>
                        {
                            b1.Property<Guid>("ExpenseId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Count")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)");

                            b1.HasKey("ExpenseId");

                            b1.ToTable("Expenses");

                            b1.WithOwner()
                                .HasForeignKey("ExpenseId");
                        });

                    b.Navigation("Value")
                        .IsRequired();
                });

            modelBuilder.Entity("MyCash.WealthManager.Core.Entities.Family", b =>
                {
                    b.OwnsOne("MyCash.WealthManager.Core.ValueObjects.FamilySettings", "Settings", b1 =>
                        {
                            b1.Property<Guid>("FamilyId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Colour")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<decimal>("ExpectedMonthyExpenses")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("FamilyId");

                            b1.ToTable("Families");

                            b1.WithOwner()
                                .HasForeignKey("FamilyId");
                        });

                    b.Navigation("Settings")
                        .IsRequired();
                });

            modelBuilder.Entity("MyCash.WealthManager.Core.Entities.Income", b =>
                {
                    b.HasOne("MyCash.WealthManager.Core.Entities.Family", null)
                        .WithMany()
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyCash.WealthManager.Core.Entities.Family", null)
                        .WithMany("Incomes")
                        .HasForeignKey("FamilyId1");

                    b.OwnsOne("MyCash.WealthManager.Core.ValueObjects.Value", "Value", b1 =>
                        {
                            b1.Property<Guid>("IncomeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Count")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)");

                            b1.HasKey("IncomeId");

                            b1.ToTable("Incomes");

                            b1.WithOwner()
                                .HasForeignKey("IncomeId");
                        });

                    b.OwnsOne("MyCash.WealthManager.Core.ValueObjects.Value", "ValueGross", b1 =>
                        {
                            b1.Property<Guid>("IncomeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Count")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)");

                            b1.HasKey("IncomeId");

                            b1.ToTable("Incomes");

                            b1.WithOwner()
                                .HasForeignKey("IncomeId");
                        });

                    b.Navigation("Value")
                        .IsRequired();

                    b.Navigation("ValueGross")
                        .IsRequired();
                });

            modelBuilder.Entity("MyCash.WealthManager.Core.Entities.User", b =>
                {
                    b.HasOne("MyCash.WealthManager.Core.Entities.Family", null)
                        .WithMany("Users")
                        .HasForeignKey("FamilyId");
                });

            modelBuilder.Entity("MyCash.WealthManager.Core.Entities.Balance", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("MyCash.WealthManager.Core.Entities.Family", b =>
                {
                    b.Navigation("Balance")
                        .IsRequired();

                    b.Navigation("Expenses");

                    b.Navigation("Incomes");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
